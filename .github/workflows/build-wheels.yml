name: Build and test wheels

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux_x86_64
            zip: ubuntu-22.04-binaries.zip
            library_zip_name: libausaxs.so
            library: libausaxs.so

          - os: macos-latest  
            platform: macosx_11_0_universal2
            zip: macos-universal-binaries.zip
            library_zip_name: libausaxs.dylib
            library: libausaxs.dylib

          - os: windows-latest
            platform: win_amd64
            zip: windows-binaries.zip
            library_zip_name: ausaxs.dll
            library: libausaxs.dll

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Download and extract platform-specific library
        uses: robinraju/release-downloader@v1
        with:
          repository: AUSAXS/AUSAXS
          fileName: ${{ matrix.library_zip_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          latest: true
          extract: true
      
      - name: Rename and move library to resource folder
        shell: bash
        run: | 
          mkdir -p pyausaxs/resources
          LIBRARY_PATH=$(find . -name "${{ matrix.library_zip_name }}" -type f | head -n 1)

          if [ -z "$LIBRARY_PATH" ]; then
            echo "Error: Could not find ${{ matrix.library_zip_name }} in extracted files"
            echo "Available library files:"
            find . -name "*.so" -o -name "*.dylib" -o -name "*.dll" | head -10
            echo "Directory structure:"
            find . -type d | head -10
            exit 1
          fi

          cp "$LIBRARY_PATH" "pyausaxs/resources/${{ matrix.library }}"
          echo "Library copied: ${{ matrix.library_zip_name }}"
          ls -la pyausaxs/resources/

      - name: Generate platform-specific pyproject.toml
        shell: bash
        run: |
          sed 's|LIBRARY_PLACEHOLDER|resources/${{ matrix.library }}|' pyproject.template.toml > pyproject.toml
          echo "Generated pyproject.toml for ${{ matrix.platform }}:"
          cat pyproject.toml

      - name: Verify library exists
        shell: bash
        run: |
          if [ ! -f "pyausaxs/resources/${{ matrix.library }}" ]; then
            echo "Error: Library not found at pyausaxs/resources/${{ matrix.library }}"
            ls -la pyausaxs/resources/
            exit 1
          fi

      - name: Build platform-specific wheel
        shell: bash
        run: |
          python -m pip install --upgrade pip build
          python -m build --wheel

      - name: Apply platform tag and add project name
        shell: bash
        run: |
          cd dist
          for wheel in *.whl; do
            # Replace the generic tag with platform-specific tag
            platform_wheel=$(echo "$wheel" | sed 's/-py3-none-any/-py3-none-${{ matrix.platform }}/')
            final_wheel=$(echo "$platform_wheel" | sed 's/^/pyausaxs-wheel-/')
            
            if [ "$wheel" != "$platform_wheel" ]; then
              mv "$wheel" "$platform_wheel"
              echo "Applied platform tag: $wheel -> $platform_wheel"
            fi

            echo "Final wheel: $final_wheel ($(du -h "$final_wheel" | cut -f1))"
          done

      - name: Test wheel installation
        shell: bash
        run: |
          pip install twine
          twine check dist/*.whl
          rm -rf pyausaxs
          python -m pip install dist/*.whl
          python test/test.py

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.platform }}
          path: dist/*.whl