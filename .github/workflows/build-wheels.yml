name: Build platform-specific wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux_x86_64
            library: "libausaxs.so"

          # - os: macos-latest  
          #   platform: macosx_11_0_x86_64
          #   library: "libausaxs.dylib"

          # - os: windows-latest
          #   platform: win_x86_64
          #   library: "libausaxs.dll"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Copy platform-specific library
        shell: bash
        run: |
          # Create the package resources directory
          mkdir -p pyausaxs/resources
          # Copy only the library we need for this platform
          cp "resources/${{ matrix.library }}" "pyausaxs/resources/"
          echo "Library copied for ${{ matrix.platform }}:"
          ls -la pyausaxs/resources/

      - name: Generate platform-specific pyproject.toml
        shell: bash
        run: |
          sed 's|LIBRARY_PLACEHOLDER|resources/${{ matrix.library }}|' pyproject.template.toml > pyproject.toml
          echo "Generated pyproject.toml for ${{ matrix.platform }}:"
          cat pyproject.toml

      - name: Verify library exists
        shell: bash
        run: |
          if [ ! -f "resources/${{ matrix.library }}" ]; then
            echo "Error: Source library resources/${{ matrix.library }} not found!"
            ls -la resources/
            exit 1
          fi
          echo "Source library size: $(du -h 'resources/${{ matrix.library }}' | cut -f1)"
          echo "Packaged library size: $(du -h 'pyausaxs/resources/${{ matrix.library }}' | cut -f1)"

      - name: Build platform-specific wheel
        run: |
          python -m pip install --upgrade pip build
          # Clean any previous build artifacts to ensure fresh build
          rm -rf build/ dist/ *.egg-info/
          python -m build --wheel

      - name: Apply platform tag
        shell: bash
        run: |
          cd dist
          for wheel in *.whl; do
            # Replace the generic tag with platform-specific tag
            new_wheel=$(echo "$wheel" | sed 's/-py3-none-any/-py3-none-${{ matrix.platform }}/')
            if [ "$wheel" != "$new_wheel" ]; then
              mv "$wheel" "$new_wheel"
              echo "Renamed: $wheel -> $new_wheel"
            fi
            echo "Final wheel: $new_wheel ($(du -h "$new_wheel" | cut -f1))"
          done

      - name: Test wheel installation
        shell: bash
        run: |
          python -m pip install dist/*.whl
          python -c "import pyausaxs; print('✓ Package imported successfully'); print('✓ Platform detection works')"

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.platform }}
          path: dist/*.whl

  # Uncomment when ready to publish to PyPI
  # publish:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'release'
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         pattern: wheel-*
  #         merge-multiple: true
  #         path: dist/
  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
